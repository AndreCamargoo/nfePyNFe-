openapi: 3.0.3
info:
  title: Azevedo sistemas
  version: 1.0.0
  description: Documentação dos sistemas da azevedo
paths:
  /api/v1/authentication/token/:
    post:
      operationId: 01_obter_token_acesso
      description: Retorna um par de tokens (access e refresh) para autenticação JWT.
      summary: 01 Obter token de acesso
      tags:
      - Autenticação
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nome de usuário
                password:
                  type: string
                  format: password
                  description: Senha do usuário
              required:
              - username
              - password
            examples:
              ExemploDeRequisição:
                value:
                  username: usuario123
                  password: senha123
                summary: Exemplo de requisição
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExemploDeResposta:
                  value:
                    access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                    refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                  summary: Exemplo de resposta
          description: Tokens gerados com sucesso
        '401':
          description: Credenciais inválidas
  /api/v1/authentication/token/refresh/:
    post:
      operationId: 02_atualizar_token_acesso
      description: Usa o token de refresh para obter um novo token de acesso.
      summary: 02 Atualizar token de acesso
      tags:
      - Autenticação
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                refresh:
                  type: string
                  description: Token de refresh
              required:
              - refresh
            examples:
              ExemploDeRequisição:
                value:
                  refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                summary: Exemplo de requisição
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExemploDeResposta:
                  value:
                    access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                  summary: Exemplo de resposta
          description: Token atualizado com sucesso
        '401':
          description: Token de refresh inválido ou expirado
  /api/v1/authentication/token/verify/:
    post:
      operationId: 03_verificar_token_acesso
      description: Verifica se um token (access ou refresh) é válido.
      summary: 03 Verificar token
      tags:
      - Autenticação
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Token a ser verificado
              required:
              - token
            examples:
              ExemploDeRequisição:
                value:
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                summary: Exemplo de requisição
      responses:
        '200':
          description: Token válido
        '401':
          description: Token inválido
  /api/v1/accounts/signup/:
    post:
      operationId: 04_criar_novo_usuario
      description: Cria uma nova conta de usuário no sistema.
      summary: 04 Criar novo usuário
      tags:
      - Autenticação
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nome de usuário único
                email:
                  type: string
                  format: email
                  description: E-mail do usuário
                password:
                  type: string
                  format: password
                  description: Senha do usuário
              required:
              - username
              - email
              - password
            examples:
              ExemploDeRequisição:
                value:
                  username: novousuario
                  email: novo@example.com
                  password: senhasegura123
                summary: Exemplo de requisição
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExemploDeRequisição:
                  value:
                    username: novousuario
                    email: novo@example.com
                    password: senhasegura123
                  summary: Exemplo de requisição
                ExemploDeResposta:
                  value:
                    id: 1
                    username: usuario123
                    email: usuario@example.com
                  summary: Exemplo de resposta
          description: Usuário criado com sucesso
        '400':
          description: Dados inválidos ou campos faltando
  /api/v1/accounts/password-reset/:
    post:
      operationId: 05_solicitar_redefinicao_senha
      description: Solicita o envio de um e-mail com link para redefinição de senha.
      summary: 05 Solicitar redefinição de senha
      tags:
      - Autenticação
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: E-mail cadastrado
              required:
              - email
            examples:
              ExemploDeRequisição:
                value:
                  email: usuario@example.com
                summary: Exemplo de requisição
      responses:
        '200':
          description: E-mail enviado com sucesso
        '400':
          description: E-mail não encontrado
  /api/v1/accounts/change-password/:
    post:
      operationId: 06_confirmar_redefinicao_senha
      description: Confirma a redefinição de senha usando o token recebido por e-mail.
      summary: 06 Confirmar redefinição de senha
      tags:
      - Autenticação
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uidb64:
                  type: string
                  description: UID codificado em base64 do usuário
                token:
                  type: string
                  description: Token de redefinição
                new_password:
                  type: string
                  format: password
                  description: Nova senha
              required:
              - uidb64
              - token
              - new_password
            examples:
              ExemploDeRequisição:
                value:
                  uidb64: MQ
                  token: abc123def456
                  new_password: novasenha123
                summary: Exemplo de requisição
      responses:
        '200':
          description: Senha redefinida com sucesso
        '400':
          description: Dados inválidos
  /api/v1/authentication/token/me/:
    get:
      operationId: 01_obter_perfil
      description: Retorna os dados do perfil do usuário autenticado.
      summary: 01 Obter perfil do usuário
      tags:
      - Perfil do Usuário
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExemploDeResposta:
                  value:
                    id: 1
                    username: usuario123
                    email: usuario@example.com
                    first_name: João
                    last_name: Silva
                  summary: Exemplo de resposta
          description: Dados do perfil obtidos com sucesso
        '401':
          description: Usuário não autenticado
  /api/v1/accounts/users/{id}/:
    put:
      operationId: 02_atualizar_perfil
      description: Atualiza os dados do perfil do usuário.
      summary: 02 Atualizar perfil do usuário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID do usuário a ser atualizado
        required: true
      tags:
      - Perfil do Usuário
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Novo nome de usuário
                email:
                  type: string
                  format: email
                  description: Novo e-mail
                first_name:
                  type: string
                  description: Novo primeiro nome
                last_name:
                  type: string
                  description: Novo sobrenome
                password:
                  type: string
                  format: password
                  description: Nova senha
            examples:
              ExemploDeRequisiçãoParaUsuárioNormal:
                value:
                  first_name: João
                  last_name: Silva
                  email: joao.silva@example.com
                summary: Exemplo de requisição para usuário normal
              ExemploDeRequisiçãoParaSuperusuário:
                value:
                  first_name: João
                  last_name: Silva
                  email: joao.silva@example.com
                  is_active: true
                  is_staff: true
                summary: Exemplo de requisição para superusuário
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExemploDeRequisiçãoParaUsuárioNormal:
                  value:
                    first_name: João
                    last_name: Silva
                    email: joao.silva@example.com
                  summary: Exemplo de requisição para usuário normal
                ExemploDeRequisiçãoParaSuperusuário:
                  value:
                    first_name: João
                    last_name: Silva
                    email: joao.silva@example.com
                    is_active: true
                    is_staff: true
                  summary: Exemplo de requisição para superusuário
                ExemploDeResposta:
                  value:
                    id: 1
                    username: usuario123
                    email: usuario@example.com
                    first_name: João
                    last_name: Silva
                    is_active: true
                    is_staff: false
                  summary: Exemplo de resposta
          description: Perfil atualizado com sucesso
        '400':
          description: Dados inválidos
        '403':
          description: Permissão negada
  /api/v1/sistemas/rotas/:
    get:
      operationId: 01_listar_rotas_por_sistema
      description: |-
        Retorna todas as rotas e endpoints disponíveis para um sistema específico.

        ### Funcionalidades:
        - Lista filtrada de rotas API por sistema
        - Informações sobre módulos e endpoints associados
        - Metadados para configuração de controle de acesso
        - Base para atribuição de permissões a funcionários

        ### Parâmetros:
        - **sistema_id** (obrigatório): ID do sistema para filtrar as rotas

        ### Permissões:
        - **GET**: Apenas a **empresa matriz** pode visualizar as rotas do sistema
        ### Utilização:
        Esta lista é utilizada para definir quais rotas de um sistema específico cada funcionário pode acessar através do sistema de permissões hierárquicas.
      summary: 01 Listar rotas disponíveis por sistema
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: sistema_id
        schema:
          type: integer
        description: ID do sistema para filtrar as rotas
        required: true
      tags:
      - Rotas do Sistema
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRotaSistemaModelList'
              examples:
                ExemploDeResposta:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - - id: 1
                        nome: Módulo Fiscal - Consulta
                        descricao: Endpoint para consulta de documentos fiscais
                        path: /api/fiscal/consultar/
                        metodo: GET
                        sistema:
                          id: 1
                          nome: ERP Fiscal
                      - id: 2
                        nome: Módulo Fiscal - Importação
                        descricao: Endpoint para importação de notas fiscais
                        path: /api/fiscal/emitir/
                        metodo: POST
                        sistema:
                          id: 1
                          nome: ERP Fiscal
                  summary: Exemplo de resposta
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Parâmetro sistema_id não informado ou inválido
          description: ''
  /api/v1/sistemas/grupos-rotas/:
    get:
      operationId: 01_listar_grupos_permissoes
      description: "Retorna todos os grupos de permissões criados pela empresa para\
        \ gerenciar acesso de funcionários.\n\n### Funcionalidades:\n- Lista de grupos\
        \ de permissões personalizados da empresa\n- Visualização das rotas e endpoints\
        \ associados a cada grupo\n- Base para atribuição de permissões a funcionários\n\
        - Controle granular de acesso por módulos do sistema\n\n### Caso de Uso:\n\
        A empresa cria grupos como 'Administrador', 'Financeiro', 'Operacional' com\
        \ diferentes conjuntos \nde permissões, depois associa esses grupos aos funcionários\
        \ conforme suas funções.\n\n### Exemplos Práticos:\n- **Grupo Administrador**:\
        \ Todas as rotas do sistema\n- **Grupo Financeiro**: Apenas módulos financeiros\
        \ e relatórios\n- **Grupo Vendas**: Módulos de pedidos, clientes e CRM\n-\
        \ **Grupo Consulta**: Apenas visualização de dados\n\n### Permissões:\n- Apenas\
        \ usuários autenticados da empresa matriz\n- Administradores da empresa"
      summary: 01 Listar grupos de permissões da empresa
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Grupos de Permissões
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGrupoRotaSistemaListList'
              examples:
                ExemploDeResposta-GruposDaEmpresa:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - - id: 1
                        nome: Administradores
                        descricao: Acesso total a todos os módulos do sistema
                        sistema:
                          id: 1
                          nome: ERP Corporativo
                        rotas:
                        - id: 1
                          nome: Gestão de Usuários
                          path: /api/usuarios/
                          metodo: GET,POST,PUT,DELETE
                          descricao: Gerenciamento completo de usuários
                        - id: 2
                          nome: Relatórios Financeiros
                          path: /api/financeiro/relatorios/
                          metodo: GET,POST
                          descricao: Geração e visualização de relatórios
                      - id: 2
                        nome: Equipe Financeira
                        descricao: Acesso aos módulos financeiros e contábeis
                        sistema:
                          id: 1
                          nome: ERP Corporativo
                        rotas:
                        - id: 2
                          nome: Relatórios Financeiros
                          path: /api/financeiro/relatorios/
                          metodo: GET,POST
                          descricao: Geração e visualização de relatórios
                        - id: 3
                          nome: Contas a Pagar/Receber
                          path: /api/financeiro/contas/
                          metodo: GET,POST,PUT
                          descricao: Gestão de contas financeiras
                  summary: Exemplo de resposta - Grupos da empresa
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: Credenciais de autenticação não fornecidas
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Acesso restrito à empresa matriz
          description: ''
    post:
      operationId: 02_criar_grupo_permissoes
      description: |-
        Cria um novo grupo de permissões para definir quais rotas os funcionários podem acessar.

        ### Fluxo de Configuração:
        1. Empresa cria um grupo (ex: 'Coordenadores')
        2. Seleciona as rotas que esse grupo pode acessar
        3. Associa funcionários a este grupo
        4. Funcionários herdam as permissões do grupo

        ### Casos de Uso Comuns:
        ```json
        {
          "nome": "Supervisores",
          "descricao": "Acesso a gestão de equipe e relatórios",
          "sistema": 1,
          "rotas": [10, 15, 20, 25]
        }
        ```

        ### Validações:
        - Nome deve ser único por empresa
        - Rotas devem pertencer ao sistema selecionado
        - Sistema deve estar ativo para a empresa

        ### Permissões:
        - Apenas administradores da empresa matriz
      summary: 02 Criar novo grupo de permissões
      tags:
      - Grupos de Permissões
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrupoRotaSistemaCreateRequest'
            examples:
              Exemplo1-GrupoAdministrativo:
                value:
                  nome: Administradores
                  descricao: Acesso completo a todas as funcionalidades
                  sistema: 1
                  rotas:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                summary: Exemplo 1 - Grupo Administrativo
                description: Grupo com acesso total ao sistema
              Exemplo2-GrupoOperacional:
                value:
                  nome: Equipe Operacional
                  descricao: Acesso às funcionalidades do dia a dia
                  sistema: 1
                  rotas:
                  - 3
                  - 4
                  - 7
                  - 8
                summary: Exemplo 2 - Grupo Operacional
                description: Grupo com acesso limitado às operações rotineiras
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GrupoRotaSistemaCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GrupoRotaSistemaCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoRotaSistemaList'
              examples:
                ExemploDeResposta-GrupoCriado:
                  value:
                    id: 3
                    nome: Equipe Financeira
                    descricao: Acesso aos módulos financeiros
                    sistema:
                      id: 1
                      nome: ERP Corporativo
                    rotas:
                    - id: 2
                      nome: Relatórios Financeiros
                      path: /api/financeiro/relatorios/
                      metodo: GET,POST
                      descricao: Geração de relatórios financeiros
                    - id: 5
                      nome: Conciliação Bancária
                      path: /api/financeiro/conciliacao/
                      metodo: GET,POST,PUT
                      descricao: Conciliação de extratos bancários
                  summary: Exemplo de resposta - Grupo criado
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erros de validação
                examples:
                  rotas_sistema_invalido:
                    value:
                      error: Algumas rotas não pertencem ao sistema selecionado
                  nome_duplicado:
                    value:
                      nome: Já existe um grupo com este nome
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: Credenciais de autenticação não fornecidas
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Apenas administradores podem criar grupos
          description: ''
  /api/v1/sistema/grupo-rota/{id}/:
    get:
      operationId: 03_visualizar_grupo_permissoes
      description: |-
        Retorna os detalhes completos de um grupo de permissões específico.
        ### Utilização:
        - Verificar quais permissões um grupo possui
        - Validar configurações antes de associar funcionários
        - Auditoria de acessos concedidos
        ### Informações Incluídas:
        - Lista completa de rotas permitidas
        - Metadados do sistema
        - Descrição e finalidade do grupo
        ### Permissões:
        - Apenas administradores da empresa dona do grupo
      summary: 03 Visualizar detalhes do grupo de permissões
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Permissões
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoRotaSistemaList'
              examples:
                Exemplo-GrupoDeCoordenadores:
                  value:
                    id: 4
                    nome: Coordenadores
                    descricao: Acesso a gestão de equipes e indicadores
                    sistema:
                      id: 1
                      nome: ERP Corporativo
                    rotas:
                    - id: 6
                      nome: Gestão de Equipe
                      path: /api/rh/equipe/
                      metodo: GET,POST,PUT
                      descricao: Gerenciamento de membros da equipe
                    - id: 7
                      nome: Indicadores de Performance
                      path: /api/indicadores/
                      metodo: GET
                      descricao: Visualização de KPIs e métricas
                    - id: 8
                      nome: Relatórios Gerenciais
                      path: /api/relatorios/gerenciais/
                      metodo: GET,POST
                      descricao: Relatórios para tomada de decisão
                    usuario: 1
                  summary: Exemplo - Grupo de Coordenadores
                  description: Exemplo de grupo para coordenadores com acesso a gestão
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Grupo não encontrado ou não pertence à empresa
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Acesso permitido apenas à empresa proprietária
          description: ''
    put:
      operationId: 04_atualizar_grupo_permissoes
      description: |-
        Atualiza completamente as permissões de um grupo existente.
        ### Cenários de Uso:
        - Adicionar novas rotas a um grupo existente
        - Remover permissões não mais necessárias
        - Corrigir configurações de acesso
        - Expandir/restringir permissões do grupo
        ### Impacto:
        - Todas as alterações afetam imediatamente os funcionários associados
        - Recomendado comunicar mudanças aos usuários afetados
        ### Permissões:
        - Apenas administradores da empresa proprietária
      summary: 04 Atualizar grupo de permissões
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Permissões
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrupoRotaSistemaCreateRequest'
            examples:
              Exemplo-AdicionarPermissõesFinanceiras:
                value:
                  nome: Coordenadores Expandido
                  descricao: Acesso ampliado para incluir módulo financeiro
                  sistema: 1
                  rotas:
                  - 6
                  - 7
                  - 8
                  - 2
                  - 5
                summary: Exemplo - Adicionar permissões financeiras
                description: Expansão de permissões para incluir módulo financeiro
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GrupoRotaSistemaCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GrupoRotaSistemaCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoRotaSistemaList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Dados inválidos ou rotas incompatíveis
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Grupo não encontrado
          description: ''
    patch:
      operationId: 05_atualizar_parcial_grupo_permissoes
      description: |-
        Atualiza apenas campos específicos do grupo de permissões.
        ### Casos de Uso:
        - Renomear grupo sem alterar permissões
        - Atualizar descrição do grupo
        - Adicionar/remover rotas específicas
        - Corrigir pequenos ajustes
        ### Vantagens:
        - Não precisa enviar todos os dados
        - Menor risco de erro
        - Mais eficiente para pequenas mudanças
        ### Permissões:
        - Apenas administradores da empresa proprietária
      summary: 05 Atualização parcial do grupo
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Permissões
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGrupoRotaSistemaCreateRequest'
            examples:
              Exemplo1-ApenasRenomear:
                value:
                  nome: Líderes de Equipe
                summary: Exemplo 1 - Apenas renomear
                description: Apenas alterando o nome do grupo
              Exemplo2-AdicionarRotas:
                value:
                  rotas:
                  - 6
                  - 7
                  - 8
                  - 9
                summary: Exemplo 2 - Adicionar rotas
                description: Apenas atualizando a lista de rotas
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGrupoRotaSistemaCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGrupoRotaSistemaCreateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrupoRotaSistemaList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Dados inválidos
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Grupo não encontrado
          description: ''
    delete:
      operationId: 06_excluir_grupo_permissoes
      description: |-
        Remove permanentemente um grupo de permissões do sistema.

        ### Verificações de Segurança:
        - Grupo não pode estar associado a funcionários ativos
        - Backup das configurações é recomendado
        - Operação irreversível

        ### Fluxo Recomendado:
        1. Verificar funcionários associados ao grupo
        2. Migrar funcionários para outro grupo se necessário
        3. Confirmar exclusão
        4. Registrar a ação no log do sistema

        ### Permissões:
        - Apenas administradores da empresa proprietária
        - Grupo não pode ter funcionários associados
      summary: 06 Excluir grupo de permissões
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Grupos de Permissões
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Grupo excluído com sucesso
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Grupo não pode ser excluído
                examples:
                  grupo_com_funcionarios:
                    value:
                      error: Não é possível excluir grupo com funcionários associados
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Grupo não encontrado
          description: ''
  /api/v1/categorias/:
    get:
      operationId: 01_listar_categorias
      description: Retorna a lista de categorias e subcategorias de empresas.
      summary: 01 Listar todas as categorias de empresas
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Categoria empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoriaEmpresaModelList'
          description: ''
  /api/v1/empresas/:
    get:
      operationId: 01_empresa_list
      description: Retorna todas as empresas vinculadas ao usuário autenticado **ou**
        empresas que sejam filiais de alguma empresa pertencente ao usuário autenticado.
      summary: 01 Listar empresas do usuário
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmpresaListList'
          description: ''
    post:
      operationId: 02_empresa_create
      description: |-
        Cria uma nova empresa vinculada ao usuário autenticado.

        ### Regras de negócio:
        - O campo **documento** deve ser único (não pode repetir).
        - Se **matriz_filial** for informado:
          - A empresa matriz deve **pertencer ao usuário autenticado**.
          - A empresa matriz não pode ser uma filial (ou seja, deve ter `matriz_filial=null`).
          - O usuário precisa já ter ao menos uma empresa **matriz** cadastrada.
        - O campo **usuario** é automaticamente vinculado ao usuário autenticado.
      summary: 02 Criar empresa
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpresaCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmpresaCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmpresaCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpresaCreate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/v1/empresa/{id}/:
    get:
      operationId: 03_empresa_detail
      description: |-
        Retorna os dados de uma empresa específica.

        ### Permissões:
        - A empresa deve pertencer ao usuário autenticado **OU**
        - Ser uma filial de alguma empresa pertencente ao usuário autenticado
      summary: 03 Detalhar empresa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpresaList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
    put:
      operationId: api_v1_empresa_update
      description: |-
        Atualiza **todos os campos** de uma empresa.

        ### Permissões:
        - A empresa deve pertencer ao usuário autenticado **OU**
        - Ser uma filial de alguma empresa pertencente ao usuário autenticado
      summary: 04 Atualizar empresa (PUT)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpresaUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmpresaUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmpresaUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpresaUpdate'
          description: ''
    patch:
      operationId: api_v1_empresa_partial_update
      description: |-
        Atualiza **parcialmente** os campos de uma empresa.

        ### Permissões:
        - A empresa deve pertencer ao usuário autenticado **OU**
        - Ser uma filial de alguma empresa pertencente ao usuário autenticado
      summary: 05 Atualizar empresa (PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmpresaUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmpresaUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmpresaUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpresaUpdate'
          description: ''
    delete:
      operationId: api_v1_empresa_destroy
      description: |-
        Remove uma empresa.

        ### Permissões:
        - A empresa deve pertencer ao usuário autenticado **OU**
        - Ser uma filial de alguma empresa pertencente ao usuário autenticado
      summary: 06 Deletar empresa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/v1/database/:
    get:
      operationId: 07_conexao_banco_list
      description: |-
        Retorna a configuração de conexão com o banco de dados da empresa matriz do usuário autenticado.

        ### Regras de negócio:
        - Apenas a **empresa matriz** do usuário pode ter configuração de banco
        - Retorna apenas **uma conexão** (a primeira encontrada)
        - Campos sensíveis como senha são descriptografados automaticamente
        - Se nenhuma conexão for encontrada, retorna lista vazia
      summary: 07 Listar conexão de banco
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConexaoBancoModel'
              examples:
                ExemploDeResposta:
                  value:
                  - id: 1
                    empresa: 1
                    host: localhost
                    porta: 5432
                    usuario: meu_usuario
                    database: meu_banco
                    senha: '********'
                  summary: Exemplo de resposta
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Empresa matriz ativa não encontrada
          description: ''
    post:
      operationId: 08_conexao_banco_create
      description: |-
        Cria uma nova configuração de conexão com banco de dados para a empresa matriz do usuário.

        ### Regras de negócio:
        - O usuário deve ter uma **empresa matriz ativa**
        - Apenas **uma conexão por empresa matriz** é permitida
        - O campo **criar_banco** só será considerado se:
          - O administrador do sistema tiver liberado a permissão no `EmpresaSistema`
          - Caso contrário, o valor será ignorado e tratado como `False`
        - Campos sensíveis como senha são **criptografados** automaticamente antes do armazenamento
      summary: 08 Criar conexão de banco
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConexaoBancoModelRequest'
            examples:
              ExemploDeRequisição:
                value:
                  host: meu-servidor.com
                  porta: 5432
                  usuario: usuario_banco
                  database: nome_banco
                  senha: senha_segura
                  criar_banco: true
                summary: Exemplo de requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConexaoBancoModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConexaoBancoModelRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConexaoBancoModel'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erro de validação ou empresa matriz não encontrada
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permissão para criar banco não concedida pelo administrador
          description: ''
  /api/v1/funcionarios/:
    get:
      operationId: 09_funcionario_list
      description: |-
        Retorna todos os funcionários ativos das empresas vinculadas ao usuário autenticado.

        ### Regras de negócio:
        - Lista apenas funcionários
        - Mostra apenas funcionários das empresas onde o usuário tem acesso
        - Se o limite for excedido, novas criações serão bloqueadas
      summary: 09 Listar funcionários
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFuncionarioListList'
              examples:
                ExemploDeResposta:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - - id: 1
                        nome: João Silva
                        email: joao@empresa.com
                        empresa:
                          id: 1
                          razao_social: Empresa XYZ LTDA
                        cargo: Analista
                        status: '1'
                        user: 123
                  summary: Exemplo de resposta
          description: ''
    post:
      operationId: 10_funcionario_create
      description: |
        Cria um novo funcionário vinculado a uma empresa do usuário autenticado.

        ### Regras de negócio:
        - A empresa deve pertencer ao usuário autenticado
        - **Limite de funcionários** de acordo com o contrato`
        - Se `limite de funcionários` for excedido, retorna erro 400
        - O email do funcionário deve ser único no sistema
      summary: 10 Criar funcionário
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuncionarioRequest'
            examples:
              ExemploDeRequisição:
                value:
                  nome: Maria Santos
                  email: maria@empresa.com
                  empresa: 1
                  cargo: Desenvolvedor
                  telefone: (11) 99999-9999
                summary: Exemplo de requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FuncionarioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FuncionarioRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erro de validação ou limite excedido
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permissão negada para a empresa
          description: ''
  /api/v1/funcionario/{id}/:
    get:
      operationId: 11_funcionario_detail
      description: |-
        Retorna os dados completos de um funcionário específico.

        ### Regras de negócio:
        - O funcionário deve pertencer a uma empresa do usuário autenticado
        - Apenas funcionários com **status='1' (ativo)** são retornados
        - Inclui dados do usuário vinculado no sistema
      summary: 11 Detalhar funcionário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Funcionário não encontrado
          description: ''
    put:
      operationId: 12_funcionario_update_put
      description: |-
        Atualiza **todos os campos** de um funcionário.

        ### Regras de negócio:
        - O funcionário deve pertencer a uma empresa do usuário autenticado
        - Atualiza também o usuário vinculado no sistema
        - O email deve permanecer único no sistema
        - Não é possível alterar o status por esta operação (use DELETE para desativar)
      summary: 12 Atualizar funcionário (PUT)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuncionarioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FuncionarioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FuncionarioRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Funcionario'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erro de validação
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Funcionário não encontrado
          description: ''
    patch:
      operationId: 13_funcionario_update_patch
      description: |-
        Atualiza **parcialmente** os campos de um funcionário.

        ### Regras de negócio:
        - O funcionário deve pertencer a uma empresa do usuário autenticado
        - Atualiza também o usuário vinculado no sistema
        - O email deve permanecer único no sistema
        - Não é possível alterar o status por esta operação (use DELETE para desativar)
      summary: 13 Atualizar funcionário (PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFuncionarioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFuncionarioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFuncionarioRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Funcionario'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erro de validação
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Funcionário não encontrado
          description: ''
    delete:
      operationId: 14_funcionario_delete
      description: |-
        Realiza **soft delete** (desativação) de um funcionário.

        ### Regras de negócio:
        - Altera o status do funcionário para '2' (inativo)
        - Se o usuário **não estiver vinculado a outras empresas ativas**, desativa também a conta de usuário
        - Se o usuário **estiver vinculado a outras empresas**, mantém a conta ativa
        - **Não remove fisicamente** os dados do banco
        - O funcionário não aparecerá mais nas listagens
      summary: 14 Desativar funcionário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Funcionário desativado com sucesso
              examples:
                ExemploDeResposta:
                  value:
                    message: Funcionário desativado com sucesso.
                  summary: Exemplo de resposta
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Funcionário não encontrado
          description: ''
  /api/v1/funcionarios/rotas/:
    get:
      operationId: 15_funcionario_rotas_list
      description: |-
        Retorna todas as **rotas permitidas** vinculadas aos funcionários das empresas que pertencem ao usuário autenticado.

        ### Regras de negócio:
        - Somente **usuários independentes** ou **administradores** têm acesso.
        - Cada registro vincula um funcionário a um grupo de rotas (`GrupoRotaSistema`).
        - O campo `status` indica se o acesso está **ativo ('1')** ou **inativo ('2')**.
      summary: 15 Listar rotas permitidas por funcionário
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFuncionarioRotaModelList'
              examples:
                ExemploDeResposta:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - - id: 1
                        funcionario:
                          id: 5
                          user: 12
                          empresa:
                            id: 3
                            razao_social: Tech Solutions LTDA
                          role: admin
                          status: '1'
                        rota:
                          id: 2
                          nome: Módulo Fiscal
                          descricao: Acesso ao módulo de NF-e
                          sistema:
                            id: 1
                            nome: ERP Fiscal
                        status: Ativo
                        criado_em: '2025-10-06T10:30:00Z'
                        atualizado_em: '2025-10-06T10:31:00Z'
                  summary: Exemplo de resposta
          description: ''
    post:
      operationId: 16_funcionario_rota_create
      description: |-
        Cria uma nova permissão de rota para um funcionário específico.

        ### Regras de negócio:
        - Apenas **usuários independentes** ou **administradores** podem criar.
        - A combinação `(funcionario, rota)` deve ser **única**.
        - O campo `status` deve ser `'1'` (Ativo) ou `'2'` (Inativo).
        - Caso a rota já esteja cadastrada para o funcionário, retorna erro 400.
      summary: 16 Criar rota permitida para funcionário
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuncionarioRotaModelRequest'
            examples:
              ExemploDeRequisição:
                value:
                  funcionario: 5
                  rota: 2
                  status: '1'
                summary: Exemplo de requisição
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FuncionarioRotaModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FuncionarioRotaModelRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioRotaModel'
              examples:
                ExemploDeResposta:
                  value:
                    id: 10
                    funcionario:
                      id: 5
                      user: 12
                      empresa:
                        id: 3
                        razao_social: Tech Solutions LTDA
                      role: admin
                      status: '1'
                    rota:
                      id: 2
                      nome: Módulo Fiscal
                      descricao: Acesso ao módulo de NF-e
                      sistema:
                        id: 1
                        nome: ERP Fiscal
                    status: Ativo
                    criado_em: '2025-10-06T10:30:00Z'
                    atualizado_em: '2025-10-06T10:31:00Z'
                  summary: Exemplo de resposta
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erro de validação ou rota já cadastrada
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permissão negada
          description: ''
  /api/v1/funcionario/rota/{id}/:
    get:
      operationId: 17_funcionario_rota_detail
      description: |-
        Retorna os detalhes de uma rota permitida específica.

        ### Regras de negócio:
        - Apenas **usuários independentes** ou **administradores** têm acesso.
        - O registro deve existir e estar vinculado a um funcionário ativo.
      summary: 17 Detalhar rota permitida de funcionário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioRotaModel'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Rota permitida não encontrada
          description: ''
    put:
      operationId: 18_funcionario_rota_update_put
      description: |-
        Atualiza todos os campos de uma permissão de rota de funcionário.

        ### Regras de negócio:
        - Apenas **usuários independentes** ou **administradores** podem atualizar.
        - A combinação `(funcionario, rota)` deve continuar única.
        - Não é possível alterar `funcionario` e `rota` para um par já existente.
      summary: 18 Atualizar rota permitida (PUT)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FuncionarioRotaModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FuncionarioRotaModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FuncionarioRotaModelRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioRotaModel'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erro de validação ou duplicidade
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Rota permitida não encontrada
          description: ''
    patch:
      operationId: 19_funcionario_rota_update_patch
      description: |-
        Atualiza parcialmente os campos de uma permissão de rota de funcionário.

        ### Regras de negócio:
        - Apenas **usuários independentes** ou **administradores** podem atualizar.
        - O par `(funcionario, rota)` deve permanecer único.
        - O campo `status` pode ser alterado para ativar/inativar o acesso.
      summary: 19 Atualizar rota permitida (PATCH)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFuncionarioRotaModelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFuncionarioRotaModelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFuncionarioRotaModelRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuncionarioRotaModel'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Erro de validação
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Rota permitida não encontrada
          description: ''
    delete:
      operationId: 20_funcionario_rota_delete
      description: |-
        Remove uma permissão de rota de funcionário.

        ### Regras de negócio:
        - Apenas **usuários independentes** ou **administradores** podem excluir.
        - A exclusão é **definitiva** (remoção física).
        - Caso o registro não exista, retorna 404.
      summary: 20 Remover rota permitida
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Empresa
      security:
      - jwtAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Permissão de rota removida com sucesso
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Rota permitida não encontrada
          description: ''
components:
  schemas:
    CategoriaEmpresaModel:
      type: object
      description: Serializer para CategoriaEmpresa
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        descricao:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - nome
      - updated_at
    ConexaoBancoModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        _host:
          type: string
          format: byte
          readOnly: true
          title: ' host'
        _porta:
          type: string
          format: byte
          readOnly: true
          title: ' porta'
        _usuario:
          type: string
          format: byte
          readOnly: true
          title: ' usuario'
        _senha:
          type: string
          format: byte
          readOnly: true
          title: ' senha'
        _database:
          type: string
          format: byte
          readOnly: true
          title: ' database'
        criado_em:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
        empresa:
          type: integer
          readOnly: true
      required:
      - _database
      - _host
      - _porta
      - _senha
      - _usuario
      - atualizado_em
      - criado_em
      - empresa
      - id
    ConexaoBancoModelRequest:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          minLength: 1
        host:
          type: string
          writeOnly: true
          minLength: 1
        porta:
          type: integer
          writeOnly: true
        usuario:
          type: string
          writeOnly: true
          minLength: 1
        database:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - database
      - host
      - password
      - porta
      - usuario
    EmpresaCreate:
      type: object
      description: Serializer específico para criação
      properties:
        id:
          type: integer
          readOnly: true
        razao_social:
          type: string
          maxLength: 200
        documento:
          type: string
          maxLength: 18
        ie:
          type: string
          nullable: true
          maxLength: 15
        uf:
          $ref: '#/components/schemas/UfEnum'
        file:
          type: string
          format: uri
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        usuario:
          type: integer
        categoria:
          type: integer
          nullable: true
        matriz_filial:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
    EmpresaCreateRequest:
      type: object
      description: Serializer específico para criação
      properties:
        razao_social:
          type: string
          minLength: 1
          maxLength: 200
        documento:
          type: string
          minLength: 1
          maxLength: 18
        ie:
          type: string
          nullable: true
          maxLength: 15
        uf:
          $ref: '#/components/schemas/UfEnum'
        senha:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 255
        file:
          type: string
          format: binary
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        usuario:
          type: integer
        categoria:
          type: integer
          nullable: true
        matriz_filial:
          type: integer
          nullable: true
      required:
      - senha
    EmpresaList:
      type: object
      description: Serializer para listagem (pode incluir campos calculados ou relacionados)
      properties:
        id:
          type: integer
          readOnly: true
        razao_social:
          type: string
          maxLength: 200
        documento:
          type: string
          maxLength: 18
        ie:
          type: string
          nullable: true
          maxLength: 15
        uf:
          $ref: '#/components/schemas/UfEnum'
        file:
          type: string
          format: uri
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        usuario:
          type: integer
        categoria:
          type: integer
          nullable: true
        matriz_filial:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
    EmpresaUpdate:
      type: object
      description: Serializer específico para atualização
      properties:
        id:
          type: integer
          readOnly: true
        razao_social:
          type: string
          maxLength: 200
        documento:
          type: string
          maxLength: 18
        ie:
          type: string
          nullable: true
          maxLength: 15
        uf:
          $ref: '#/components/schemas/UfEnum'
        file:
          type: string
          format: uri
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        usuario:
          type: integer
          readOnly: true
        categoria:
          type: integer
          nullable: true
        matriz_filial:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
      - usuario
    EmpresaUpdateRequest:
      type: object
      description: Serializer específico para atualização
      properties:
        razao_social:
          type: string
          minLength: 1
          maxLength: 200
        documento:
          type: string
          minLength: 1
          maxLength: 18
        ie:
          type: string
          nullable: true
          maxLength: 15
        uf:
          $ref: '#/components/schemas/UfEnum'
        senha:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 255
        file:
          type: string
          format: binary
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        categoria:
          type: integer
          nullable: true
        matriz_filial:
          type: integer
          nullable: true
    Funcionario:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - role
      - status
    FuncionarioList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        empresa_nome:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        status:
          type: string
          readOnly: true
      required:
      - email
      - empresa_nome
      - id
      - role
      - status
      - username
    FuncionarioRequest:
      type: object
      properties:
        empresa_id:
          type: integer
          writeOnly: true
        username:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
        role:
          $ref: '#/components/schemas/RoleEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - email
      - empresa_id
      - password
      - role
      - status
      - username
    FuncionarioRotaModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        funcionario:
          type: integer
        rota:
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        status_display:
          type: string
          readOnly: true
        criado_em:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
      required:
      - atualizado_em
      - criado_em
      - funcionario
      - id
      - rota
      - status
      - status_display
    FuncionarioRotaModelRequest:
      type: object
      properties:
        funcionario:
          type: integer
        rota:
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - funcionario
      - rota
      - status
    GrupoRotaSistemaCreateRequest:
      type: object
      description: |-
        Serializer para CREATE de GrupoRotaSistema que define automaticamente
        o usuário baseado no token logado.
      properties:
        sistema:
          type: integer
        nome:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          nullable: true
        rotas:
          type: array
          items:
            type: integer
      required:
      - nome
      - rotas
      - sistema
    GrupoRotaSistemaList:
      type: object
      description: Serializer para LIST de GrupoRotaSistema com informações detalhadas.
      properties:
        id:
          type: integer
          readOnly: true
        usuario:
          type: integer
          readOnly: true
        usuario_nome:
          type: string
          readOnly: true
        sistema:
          type: integer
          readOnly: true
        sistema_nome:
          type: string
          readOnly: true
        nome:
          type: string
          readOnly: true
        descricao:
          type: string
          readOnly: true
          nullable: true
        rotas_count:
          type: string
          readOnly: true
        rotas_detalhes:
          type: array
          items:
            $ref: '#/components/schemas/RotaSistemaModel'
          readOnly: true
      required:
      - descricao
      - id
      - nome
      - rotas_count
      - rotas_detalhes
      - sistema
      - sistema_nome
      - usuario
      - usuario_nome
    PaginatedCategoriaEmpresaModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CategoriaEmpresaModel'
    PaginatedEmpresaListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmpresaList'
    PaginatedFuncionarioListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FuncionarioList'
    PaginatedFuncionarioRotaModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FuncionarioRotaModel'
    PaginatedGrupoRotaSistemaListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GrupoRotaSistemaList'
    PaginatedRotaSistemaModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RotaSistemaModel'
    PatchedEmpresaUpdateRequest:
      type: object
      description: Serializer específico para atualização
      properties:
        razao_social:
          type: string
          minLength: 1
          maxLength: 200
        documento:
          type: string
          minLength: 1
          maxLength: 18
        ie:
          type: string
          nullable: true
          maxLength: 15
        uf:
          $ref: '#/components/schemas/UfEnum'
        senha:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 255
        file:
          type: string
          format: binary
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        categoria:
          type: integer
          nullable: true
        matriz_filial:
          type: integer
          nullable: true
    PatchedFuncionarioRequest:
      type: object
      properties:
        empresa_id:
          type: integer
          writeOnly: true
        username:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
        role:
          $ref: '#/components/schemas/RoleEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
    PatchedFuncionarioRotaModelRequest:
      type: object
      properties:
        funcionario:
          type: integer
        rota:
          type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
    PatchedGrupoRotaSistemaCreateRequest:
      type: object
      description: |-
        Serializer para CREATE de GrupoRotaSistema que define automaticamente
        o usuário baseado no token logado.
      properties:
        sistema:
          type: integer
        nome:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          nullable: true
        rotas:
          type: array
          items:
            type: integer
    RoleEnum:
      enum:
      - admin
      - funcionario
      type: string
      description: |-
        * `admin` - Administrador
        * `funcionario` - Funcionário
    RotaSistemaModel:
      type: object
      description: |-
        Serializer para o modelo RotaSistema.

        Utilizado para operações CRUD básicas do cadastro de rotas dos sistemas.
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        path:
          type: string
          maxLength: 200
        metodo:
          type: string
          maxLength: 10
        descricao:
          type: string
          nullable: true
        sistema:
          type: integer
      required:
      - id
      - nome
      - path
      - sistema
    StatusEnum:
      enum:
      - '1'
      - '2'
      type: string
      description: |-
        * `1` - Ativo
        * `2` - Inativo
    UfEnum:
      enum:
      - AC
      - AL
      - AP
      - AM
      - BA
      - CE
      - DF
      - ES
      - GO
      - MA
      - MT
      - MS
      - MG
      - PA
      - PB
      - PR
      - PE
      - PI
      - RJ
      - RN
      - RS
      - RO
      - RR
      - SC
      - SP
      - SE
      - TO
      type: string
      description: |-
        * `AC` - Acre
        * `AL` - Alagoas
        * `AP` - Amapá
        * `AM` - Amazonas
        * `BA` - Bahia
        * `CE` - Ceará
        * `DF` - Distrito Federal
        * `ES` - Espírito Santo
        * `GO` - Goiás
        * `MA` - Maranhão
        * `MT` - Mato Grosso
        * `MS` - Mato Grosso do Sul
        * `MG` - Minas Gerais
        * `PA` - Pará
        * `PB` - Paraíba
        * `PR` - Paraná
        * `PE` - Pernambuco
        * `PI` - Piauí
        * `RJ` - Rio de Janeiro
        * `RN` - Rio Grande do Norte
        * `RS` - Rio Grande do Sul
        * `RO` - Rondônia
        * `RR` - Roraima
        * `SC` - Santa Catarina
        * `SP` - São Paulo
        * `SE` - Sergipe
        * `TO` - Tocantins
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
