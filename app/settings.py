"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/
"""

import os
from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

API_USERNAME = os.getenv('API_USERNAME')
API_PASSWORD = os.getenv('API_PASSWORD')
API_URL = os.getenv('API_URL')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-a_h_jcaxpm1+pu&1kq31z9xp_i=s-39#t!crujpuozhm9@(i++')

DEBUG = os.getenv('DEBUG', 'False').lower() in ('true', '1', 't')
SANDBOX_NFE = os.getenv('SANDBOX_NFE', 'False')

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '177.153.20.14',
    'api.allnube.com.br',
    'allnube.com.br',
    'www.allnube.com.br',
]

CURRENT_URL = os.getenv('API_URL')
CURRENT_URL_FRONTEND_PASSWORD_REQUEST = os.getenv('URL_FRONTEND_PASSWORD_REQUEST')
CALLMEBOT_API_KEY = os.getenv('CALLMEBOT_API_KEY')

# ==================== CORS & CSRF CONFIGURATION ====================

if DEBUG:
    # Em desenvolvimento, permitir apenas origens conhecidas
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://localhost:8000",
        "http://127.0.0.1:8000",
    ]
    CORS_ALLOW_CREDENTIALS = True  # Permitir credenciais em desenvolvimento

    CSRF_TRUSTED_ORIGINS = [
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://localhost:8000",
        "http://127.0.0.1:8000",
    ]
else:
    # Em produção, permitir apenas origens específicas
    CORS_ALLOWED_ORIGINS = [
        "https://allnube.com.br",
        "https://www.allnube.com.br",
        "https://api.allnube.com.br",
    ]
    CORS_ALLOW_CREDENTIALS = True  # Permitir credenciais (por exemplo, cookies ou JWTs)

    CSRF_TRUSTED_ORIGINS = [
        "https://allnube.com.br",
        "https://www.allnube.com.br",
        "https://api.allnube.com.br",
    ]

# Cabeçalhos permitidos para CORS
CORS_ALLOW_HEADERS = [
    'authorization',
    'content-type',
    'x-requested-with',
    'x-csrftoken',
    'accept',
    'origin',
    'user-agent',
]

# Métodos HTTP permitidos para CORS
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]

# ==================== SECURITY SETTINGS (PRODUÇÃO) ====================

if not DEBUG:
    SECURE_SSL_REDIRECT = True  # Redirecionar para HTTPS
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')  # Para quando estiver atrás de proxy
    SESSION_COOKIE_SECURE = True  # Certifique-se de que os cookies são seguros (HTTPS)
    CSRF_COOKIE_SECURE = True  # CSRF também requer HTTPS
    SECURE_BROWSER_XSS_FILTER = True  # Protege contra ataques de XSS
    SECURE_CONTENT_TYPE_NOSNIFF = True  # Impede sniffing de tipo de conteúdo
    X_FRAME_OPTIONS = 'DENY'  # Evita que a página seja exibida em frames (clickjacking)

# ==================== DJANGO CONFIG ====================

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Utilizando Rest Framework
    'rest_framework',
    # Simplejwt
    'rest_framework_simplejwt',
    # Documentação
    'drf_spectacular',
    # Apps
    'authentication',
    'nfe',
    'nfe_evento',
    'nfe_resumo',
    'empresa',
    'apexcharts',
    'sistema',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# ==================== DATABASE ====================

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DB_CONNECTION', 'django.db.backends.postgresql'),
        'NAME': os.getenv('DB_DATABASE', 'allnube_db'),
        'USER': os.getenv('DB_USERNAME', 'allnube_user'),
        'PASSWORD': os.getenv('DB_PASSWORD', ''),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}

# ==================== PASSWORD VALIDATORS ====================

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# ==================== LOGS ====================
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/error.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}

# ==================== I18N ====================

LANGUAGE_CODE = 'pt-BR'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

# ==================== STATIC & MEDIA FILES ====================

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles/')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# ==================== FILE UPLOAD LIMIT ====================

DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB

# ==================== EMAIL ====================

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True').lower() == 'true'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', '')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', '')

# ==================== DJANGO REST FRAMEWORK ====================

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

# ==================== JWT SETTINGS ====================

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=2),
}

# ==================== CUSTOM SETTINGS ====================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
APP_VERSION = '1.0.0'
MAX_FILE_UPLOAD_SIZE = 104857600  # 100MB

SPECTACULAR_SETTINGS = {
    'TITLE': 'Your Project API',
    'DESCRIPTION': 'Your project description',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,

    # Determina como as operações devem ser classificadas. Se você pretende fazer a classificação com um
    # PREPROCESSING_HOOKS, certifique-se de desabilitar esta configuração. Se configurado, a classificação
    # é aplicada após o PREPROCESSING_HOOKS. Aceita
    # True (alpha-sorter do drf-spectacular), False ou um valor invocável para o argumento-chave de classificação.
    'SORT_OPERATIONS': False,  # Não ordenar automaticamente

    # Determina se os parâmetros da operação devem ser classificados alfanumericamente ou apenas
    # na ordem em que chegaram. Aceita Verdadeiro, Falso ou um valor invocável para o argumento-chave da classificação.
    'SORT_OPERATION_PARAMETERS': False,

    'COMPONENT_SPLIT_REQUEST': True,

    'COMPONENT_SECURITY_SCHEMES': {
        'bearerAuth': {
            'type': 'http',
            'scheme': 'bearer',
            'bearerFormat': 'JWT',
        },
    },

    'PREPROCESSING_HOOKS': [
        'app.schema_hooks.remove_specific_paths',
    ],
}
